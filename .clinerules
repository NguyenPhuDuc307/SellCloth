# SellCloth Project Rules & Patterns

## Communication & Language
- **Primary Language**: Vietnamese cho user communication
- **Code Language**: English cho code, comments, v√† technical docs
- **Data Language**: Vietnamese cho content (product names, categories, etc.)

## Development Patterns

### Laravel Best Practices
- Use Eloquent ORM, avoid raw SQL queries
- Follow Laravel naming conventions (CamelCase cho models, snake_case cho database)
- Use Artisan commands cho repetitive tasks
- Migrations only forward (no rollback trong production)

### Filament Patterns
- Auto-generate resources first, then customize
- Use Filament form components cho consistent UI
- Leverage Filament table features (filters, actions, etc.)
- Keep resource classes focused v√† readable
- **PROVEN**: Vietnamese labels work perfectly in Filament interface

### Database Design Decisions
- JSON fields cho arrays (sizes, colors, images) - simpler than pivot tables
- Embedded customer info trong orders (no separate customers table yet)
- Auto-generated order numbers v·ªõi date prefix
- Boolean flags cho status management (is_active, is_featured)

## Code Organization
```
Models: Business logic v√† relationships
Resources: Admin interface definitions
Seeders: Consistent test data generation
Migrations: Schema evolution, always forward
```

## Data Patterns

### Vietnamese Product Categories
- "√Åo nam", "√Åo n·ªØ", "Qu·∫ßn nam", "Qu·∫ßn n·ªØ", "Ph·ª• ki·ªán", "Gi√†y d√©p"
- Use Vietnamese names but English slugs
- Maintain slug uniqueness for SEO

### Product Variant Handling
- Sizes as array: ['S', 'M', 'L', 'XL'] cho clothing, ['39', '40', '41'] cho shoes
- Colors as array: ['ƒêen', 'Tr·∫Øng', 'X√°m'] in Vietnamese
- Prices in VND (Vietnamese Dong) v·ªõi ‚Ç´ symbol

### Order Management Flow
```
pending ‚Üí processing ‚Üí shipped ‚Üí delivered
cancelled (can happen from any state)
```

## User Preferences
- **Admin Panel Focus**: Priority on admin functionality first ‚úÖ COMPLETED
- **Simplicity**: Keep features simple and functional ‚úÖ PROVEN WORKING
- **Vietnamese UX**: User-facing content in Vietnamese ‚úÖ IMPLEMENTED
- **Step-by-step**: Implement features incrementally ‚úÖ FOLLOWING

## Development Workflow PROVEN EFFECTIVE
1. Database design first (migrations) ‚úÖ
2. Models v·ªõi relationships ‚úÖ
3. Seeders cho test data ‚úÖ
4. Filament resources cho admin ‚úÖ
5. Test everything before moving forward ‚úÖ
6. **NEW**: Live testing v·ªõi actual data creation ‚úÖ

## Image & File Handling
- Currently: JSON placeholders working perfectly
- Future: Proper file upload v·ªõi Filament FileUpload component
- Pattern: Store file paths in JSON arrays
- Consider cloud storage for production

## Performance Considerations
- JSON queries acceptable cho small scale ‚úÖ VERIFIED
- Plan for caching layer if scale increases
- Keep database normalized except for convenience arrays
- Monitor N+1 query problems v·ªõi relationships

## Project Evolution Notes
- Started with basic e-commerce requirements ‚úÖ
- Focus on admin panel ƒë·ªÉ manage inventory ‚úÖ COMPLETED
- Public website l√† next priority üéØ READY TO START
- Built for small to medium scale shops

## Testing Insights (Learned from Live Testing)
- **CRUD Operations**: All working flawlessly in admin panel
- **JSON Fields**: Sizes v√† colors arrays work perfectly
- **Relationships**: Category-Product links functional
- **Vietnamese Interface**: Labels v√† navigation work beautifully
- **Auto-generation**: Slug generation from Vietnamese names works
- **Data Integrity**: Foreign key constraints properly enforced

## Next Phase Readiness
- **Frontend Development**: Ready to start public website
- **Technology Stack**: Laravel Blade + TailwindCSS recommended
- **Architecture**: Separate public controllers from admin
- **Data Foundation**: Solid v√† tested, ready for frontend consumption
